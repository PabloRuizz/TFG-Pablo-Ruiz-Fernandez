<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>