<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Hu4EQXSC/wN2o3FvFA5PsgAAAABJRU5ErkJggg==
</value>
  </data>
</root>